library(shiny)
library(DT)

ui <- shinyUI(fluidPage(
  tags$head(
    tags$link(rel = "stylesheet", type = "text/css", href = "styles.css")
  ),
  mainPanel(
    shiny::textInput("text", "Input Text"),
    actionButton("sub", "GO!"),
    DT::dataTableOutput("test"),
    htmlOutput("html"),
    br(),
    # a div named mydiv
    div(id="mydiv", "SOME text here"),
    
    # a shiny element to display unformatted text
    verbatimTextOutput("results"),
    
    # javascript code to send data to shiny server
    tags$script('
      function getSelectionText() {
        var text = "";
        if (window.getSelection) {
          text = window.getSelection().toString();
        } else if (document.selection) {
          text = document.selection.createRange().text;
        }
          return text;
      }
        
      document.onmouseup = document.onkeyup = document.onselectionchange = function() {
        var selection = getSelectionText();
        Shiny.onInputChange("mydata", selection);
      };
    '),
    actionButton("sub2", "GO!")
  )
))

server <- shinyServer(function(input, output, session) {
  words <- reactiveValues(inputs =  c("the", "hello world", "world"))
  
  observeEvent(input$sub, {
    words$inputs <- append(words$inputs, input$text)
  })
  
  observeEvent(input$sub2, {
    words$inputs <- append(words$inputs, input$mydata)
  })
  
  output$test <- DT::renderDataTable({
    data.frame(words$inputs)
  }, selection = list(mode = "single", target = "row"))
  
  text <- "This is the hello world example for this problem. This is a problem string. Its not really a prblem, but a pet string."
  
  output$html <- renderUI({
    if (is.null(input$test_rows_selected))
      return(HTML(text))
    HTML(
      str_replace_all(
        string = text,
        pattern = words$inputs[input$test_rows_selected],
        replacement = paste0(
          "<mark>",
          words$inputs[input$test_rows_selected],
          "</mark>"
        )
      )
    )
  })
  
  output$results = renderPrint({
    input$mydata
  })
  
})

shinyApp(ui = ui, server = server)